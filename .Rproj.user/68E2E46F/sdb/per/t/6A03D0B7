{
    "contents" : "install.packages('Rcpp') # Makes installation of 'dyplr' work\ninstall.packages('dplyr')\ninstall.packages('reshape2')\ninstall.packages('ggplot2')\n\nlibrary(Rcpp)\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(ggplot2)\n\ngamesRaw <- read.csv('CSVs/gamedata.csv', header = TRUE, na.strings=c(\"NA\",\"NULL\"))\ngames <- gamesRaw[,-2:-3] # Remove columns containing Metacritic page URL and boxart URL\n\ngames <- games[is.na(games$Metascore)==FALSE,] # Exclude where Metascore is NULL\ngames <- games[is.na(games$UserScore)==FALSE,] # Exclude where user score is NULL\ngames <- mutate(games, UserScoreX10 = UserScore*10) # Add column where user score multiplied by 10, since user score of 7.5 is like Metascore 75.\n\ngames$MetascoreCategory <- ifelse(games$Metascore < 50, \"Bad\",\n                                  ifelse(games$Metascore < 75, \"Mixed\",\n                                         \"Good\"))\n\ngames$UserScoreCategory <- ifelse(games$UserScoreX10 < 50, \"Bad\",\n                                  ifelse(games$UserScoreX10 < 75, \"Mixed\",\n                                         \"Good\"))\n\ngames$ReleaseDate <- as.Date(games$ReleaseDate, '%Y-%m-%d') # Convert `ReleaseDate` to dates\ngames$ReleaseYear <- as.numeric(format(games$ReleaseDate,'%Y')) # Add ReleaseYear column\ngames$ReleaseMonth <- as.numeric(format(games$ReleaseDate,'%m')) # Add month column\ngames$ReleaseQuarter <- ifelse(games$ReleaseMonth <= 3, 1,\n                               ifelse(games$ReleaseMonth <= 6, 2,\n                                      ifelse(games$ReleaseMonth <= 9, 3,\n                                             4))) # Add quarter column\ngames <- mutate(games, ReleaseYearQuarter = paste(ReleaseYear,ReleaseQuarter,sep='Q')) # Combine year and quarter columns into new column\ngames$YearCategory <- ifelse(games$ReleaseYear>=2010, '2010 to present',\n                             ifelse(games$ReleaseYear>=2005, '2005-2009',\n                                    ifelse(games$ReleaseYear>=2000, '2000-2004',\n                                           'Before 2000'))) # YearCategory column\n\nsummaryStats <- summary(games) # Min, Max, Median and other summary stats for each variable/column\\\n\n\n## SINGLE-VARIABLE EXPLORATORY DATA ANALYSES\n# System count\nggplot(\n  count(games,System),\n  aes(\n    x = reorder(System, n), \n    y = n\n  )\n) + ggtitle(\"Systems\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() + \n  scale_y_continuous(breaks=seq(0,4000,500))\n\n# Publisher count\npubCount <- count(games,Publisher)\nggplot(\n  pubCount[pubCount$n>=50,],\n  aes(\n    x = reorder(Publisher, n), \n    y = n\n  )\n) + ggtitle(\"Publishers\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() \n\n# Developer count\ndevCount <- count(games,Developer)\ndevCount <- devCount[devCount$Developer!='',]\nggplot(\n  devCount[devCount$n>=50,],\n  aes(\n    x = reorder(Developer, n), \n    y = n\n  )\n) + ggtitle(\"Developers\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() \n\n# Genre count\ngenreCount <- count(games,Genre)\nggplot(\n  genreCount[genreCount$n>=50],\n  aes(\n    x = reorder(Genre, n), \n    y = n\n  )\n) + ggtitle(\"Genres\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() \n\n# ESRB count\nesrbCount <- count(games,ESRB)\nggplot(\n  esrbCount[esrbCount$n>=50],\n  aes(\n    x = reorder(ESRB, n), \n    y = n\n  )\n) + ggtitle(\"ESRB ratings\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() \n\n\n# Metascore categories count\nggplot(\n  count(games,MetascoreCategory),\n  aes(\n    x = factor(\n      MetascoreCategory,\n      levels = c('Bad','Mixed','Good')\n    ), \n    y = n\n  )\n) + ggtitle(\"Metascore categories\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() \n\n# User score categories count\nggplot(\n  count(games,UserScoreCategory),\n  aes(\n    x = factor(\n      UserScoreCategory,\n      levels = c('Bad','Mixed','Good')\n    ), \n    y = n\n  )\n) + ggtitle(\"User score categories\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() \n\n# Release years\nggplot(\n  count(games,ReleaseYear),\n  aes(\n    x = factor(\n      ReleaseYear, \n      levels=rev(\n        levels(factor(ReleaseYear))\n      )\n    ),\n    y = n\n  )\n) + ggtitle(\"Release years\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() \n\n# Release months\nggplot(\n  count(games,ReleaseMonth),\n  aes(\n    x = factor(\n      ReleaseMonth, \n      levels=rev(\n        levels(factor(ReleaseMonth))\n      )\n    ),\n    y = n\n  )\n) + ggtitle(\"Release months\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() \n\n# Year categories\nggplot(\n  count(games,YearCategory),\n  aes(\n    x = factor(\n      YearCategory,\n      levels = c('Before 2000','2000-2004','2005-2009','2010 to present')\n    ), \n    y = n\n  )\n) + ggtitle(\"Year categories\") +\n  labs(x=NULL, y=\"Count\") + \n  geom_bar(stat=\"identity\") + \n  coord_flip() \n\n# Histogram, Metascore distribution\nggplot(games, aes(x=Metascore)) + \n  geom_histogram(binwidth=1) +\n  geom_vline(\n    aes(xintercept=mean(Metascore)),\n    color=\"red\"\n  )\n\n# Histogram, User score distribution\nggplot(games, aes(x=UserScore)) + \n  geom_histogram(binwidth=0.1) +\n  geom_vline(\n    aes(xintercept=mean(UserScore)),\n    color=\"red\"\n  )\n\n\n## TOP GAMES BY CRITICS' AND USERS' SCORES\ntopMetascores <- function(df){\n  df <- df[order(df$Metascore, decreasing = TRUE),]\n  return(df)\n}\n\ntopUserScores <- function(df){\n  df <- df[order(df$UserScore, decreasing = TRUE),]\n  return(df)  \n}\n\ntopAllMetascore <- games[order(-games$Metascore),]\nuserCounts <- c(0,10,50,100,500,1000)\n\nfor(i in userCounts){\n  varName <- paste('topAllUserScore',i,'Users', sep='')\n  assign(\n    varName,\n    topUserScores(games[which(games$Users >= i),])\n  )\n}\n\nfor(i in unique(games$System)){\n  varName <- paste('top',i,'UserScore', sep='')\n  assign(\n    varName,\n    topUserScores(\n      games[which(games$System == i & games$Users >= 10),])\n  )\n  \n  varName <- paste('top',i,'Metascore', sep='')\n  assign(\n    varName,\n    topMetascores(games[which(games$System == i),])\n  )\n}\n\n\n## MULTIVARIATE EXPLORATORY DATA ANALYSES\ngive.n <- function(x){\n  return(c(y = mean(x), label = length(x)))\n}\nmetascores <- games$Metascore\nuserScores <- games$UserScore\nscores <- list(metascores,userScores)\ncategoryCols <- c(3:7,23:27) # Variables for boxplots\n\n# Boxplots, ordered by median scores\nfor(i in categoryCols){\n  j <- 1\n  while(j <= length(scores)){\n    if(i>=4 & i<=6){\n      if(i==4){\n        countTbl <- count(games,Publisher)\n      } else if(i==5){\n        countTbl <- count(games,Developer)\n        countTbl <- countTbl[is.na(countTbl$Developer)==FALSE,]\n        countTbl <- countTbl[countTbl$Developer!='',]\n      } else if(i==6){\n        countTbl <- count(games,Genre)\n      }\n      \n      jData <- merge(\n        games,\n        countTbl[countTbl$n>=50,],\n        by=names(games)[i]\n      )\n      \n      category <- assign(\n        names(jData[1]),\n        jData[[1]]\n      )\n      \n      xLabel <- names(jData[1])\n      \n      if(j==1){\n        jData <- jData$Metascore\n      } else {\n        jData <- jData$UserScore\n      }\n    } else {\n      jData <- scores[[j]]\n      category <- assign(\n        names(games[i]),\n        games[[i]]\n      )\n      xLabel <- names(games[i])\n    }\n    \n    yLabel <- ifelse(j==1,'Metascore','User score')\n    \n    xData <- reorder(\n      category,\n      jData,\n      median\n    )\n    \n    print(\n      ggplot() + \n        geom_boxplot(\n          aes(\n            x=xData,\n            y=jData\n          )\n        ) + \n        stat_summary(fun.data = give.n, geom=\"text\", fun.y = median) +\n        xlab(xLabel) + \n        ylab(yLabel) + \n        coord_flip()\n    )\n    \n    # kruskal.test(Metascore~System,data=games)\n    print(\n      paste(\n        names(games[i]),\n        'by',\n        yLabel,\n        sep=' '\n      )\n    )\n    print(summary(aov(jData~xData)))\n    #print('==')\n    #print(TukeyHSD(aov(jData~xData)))\n    print('=======')\n    j <- j+1\n  }\n}\n\n#ggplot(diamonds, aes(cut, price)) + \n#  geom_boxplot() + \n#  stat_summary(fun.data = give.n, geom = \"text\") + \n#  coord_flip()\n\n\n# LINEAR CORRELATIONS\nlmStats <- lm(UserScore~Metascore,data=games)\nlmStatsSummary <- summary(lmStats)\nprint(lmStatsSummary)\nfor(i in c(3,7,23:27)){\n  print(names(games[i]))\n  print(summary( lm(games$UserScore ~ games[[i]]) ))\n  print(summary( lm(games$UserScore ~ games$Metascore + games[[i]]) ))\n}\n\nggplot(\n  games,\n  aes(\n    Metascore,\n    UserScore,\n    alpha = Users\n  )\n) +\n  theme(legend.position='none') + \n  geom_point(position = 'jitter') + \n  geom_smooth(method=lm) +\n  labs(\n    title = paste(\n      \"Adj R2 = \",signif(lmStatsSummary$adj.r.squared, 2),\n      \"Intercept =\",signif(lmStats$coef[[1]],2 ),\n      \" Slope =\",signif(lmStats$coef[[2]], 2),\n      \" P =\",signif(lmStatsSummary$coef[2,4], 2)\n    )\n  )\n\n# Correlation between Release Year and User Score. Weak\nlmStats <- lm(UserScore~ReleaseYear,data=games)\nlmStatsSummary <- summary(lmStats)\nggplot(\n  games,\n  aes(\n    ReleaseYear,\n    UserScore,\n    alpha=Users\n  )\n) +\n  theme(legend.position='none') + \n  geom_point(position = 'jitter') + \n  geom_smooth(method=lm) +\n  labs(\n    title = paste(\n      \"Adj R2 = \",signif(lmStatsSummary$adj.r.squared, 2),\n      \"Intercept =\",signif(lmStats$coef[[1]],2 ),\n      \" Slope =\",signif(lmStats$coef[[2]], 2),\n      \" P =\",signif(lmStatsSummary$coef[2,4], 2)\n    )\n  )\n\nmultiLM <- lm(UserScore ~ Metascore+ReleaseYear, data=games)\nsummary(multiLM)\n\n\n# CHARTS\n# Make boxplot comparing scores by users and critics for each System\ngames.chart1Data <- melt(\n  games, \n  id.vars=c('Id','System'), \n  measure.vars=c('Metascore','UserScoreX10')\n)\n\nfor(i in unique(games.chart1Data$System)){\n  medianMetascore <- median(\n    games.chart1Data[\n      games.chart1Data$variable=='Metascore' &\n        games.chart1Data$System==i,\n      ]$value\n  )\n  \n  medianUserScore <- median(\n    games.chart1Data[\n      games.chart1Data$variable=='UserScoreX10' &\n        games.chart1Data$System==i,\n      ]$value\n  )\n  \n  MetascoreMinusUserScore <- medianMetascore-medianUserScore\n\n  games.chart1Data$SystemMedianScoreDifference <-ifelse(\n    games.chart1Data$System==i,\n    MetascoreMinusUserScore,\n    games.chart1Data$SystemMedianScoreDifference\n  )\n}\n\nggplot(games.chart1Data) + \n  geom_boxplot(\n    aes(\n      x=reorder(System,SystemMedianScoreDifference),\n      y=value,\n      fill=variable\n    )\n  ) +\n  coord_flip()\n\n# Make boxplot comparing scores by users and critics for each YearCategory\ngames.chart2Data <- melt(\n  games, \n  id.vars=c('Id','YearCategory'), \n  measure.vars=c('Metascore','UserScoreX10')\n)\n\nggplot(games.chart2Data) + \n  geom_boxplot(\n    aes(\n      x=factor(\n        YearCategory,\n        levels = c('Before 2000','2000-2004','2005-2009','2010 to present')\n      ),\n      y=value,\n      fill=variable\n    )\n  ) +\n  coord_flip()\n\n# Make boxplot comparing scores by users and critic for top publishers\ntopPubs <- pubCount[pubCount$n>=50,]\ngames.chart3Data <- melt(\n  merge(\n    games,\n    topPubs,\n    by=names(games)[4]\n  ), \n  id.vars=c('Id','Publisher'), \n  measure.vars=c('Metascore','UserScoreX10')\n)\n\ngames.chart3Data$PublisherMedianScoreDifference <- NA\nfor(i in unique(games.chart4Data$Publisher)){\n  medianMetascore <- median(\n    games.chart3Data[\n      games.chart3Data$variable=='Metascore' &\n      games.chart3Data$Publisher==i,\n    ]$value\n  )\n  \n  medianUserScore <- median(\n    games.chart3Data[\n      games.chart3Data$variable=='UserScoreX10' &\n      games.chart3Data$Publisher==i,\n    ]$value\n  )\n  \n  MetascoreMinusUserScore <- medianMetascore-medianUserScore\n  \n  games.chart3Data$PublisherMedianScoreDifference <-ifelse(\n    games.chart3Data$Publisher==i,\n    MetascoreMinusUserScore,\n    games.chart3Data$PublisherMedianScoreDifference\n  )\n}\n\nggplot(games.chart3Data) + \n  geom_boxplot(\n    aes(\n      x=reorder(Publisher,PublisherMedianScoreDifference),\n      y=value,\n      fill=variable\n    )\n  ) +\n  coord_flip()\n\n# Make boxplot comparing scores by users and critic for top devs\ntopDevs <- devCount[devCount$n>=50,]\ngames.chart4Data <- melt(\n  merge(\n    games,\n    topDevs,\n    by=names(games)[5]\n  ), \n  id.vars=c('Id','Developer'), \n  measure.vars=c('Metascore','UserScoreX10')\n)\n\ngames.chart4Data$DeveloperMedianScoreDifference <- NA\nfor(i in unique(games.chart4Data$Developer)){\n  medianMetascore <- median(\n    games.chart4Data[\n      games.chart4Data$variable=='Metascore' &\n        games.chart4Data$Developer==i,\n      ]$value\n  )\n  \n  medianUserScore <- median(\n    games.chart4Data[\n      games.chart4Data$variable=='UserScoreX10' &\n        games.chart4Data$Developer==i,\n      ]$value\n  )\n  \n  MetascoreMinusUserScore <- medianMetascore-medianUserScore\n  \n  games.chart4Data$DeveloperMedianScoreDifference <-ifelse(\n    games.chart4Data$Developer==i,\n    MetascoreMinusUserScore,\n    games.chart4Data$DeveloperMedianScoreDifference\n  )\n}\n\nggplot(games.chart4Data) + \n  geom_boxplot(\n    aes(\n      x=reorder(Developer,DeveloperMedianScoreDifference),\n      y=value,\n      fill=variable\n    )\n  ) +\n  coord_flip()\n\n\n## OVERRATED, UNDERRATED, CONTROVERSIAL GAMES\ngames <- mutate(games, CriticUserDiff = Metascore-UserScoreX10)\ngames <- mutate(\n  games, \n  posNegDiffCritics = abs(CriticsPositive-CriticsNegative)\n)\ngames <- mutate(\n  games,\n  mixedPortionCritics = CriticMixed/Critics\n)\ngames <- mutate(\n  games, \n  posNegDiffUsers = abs(UsersPositive-UsersNegative)\n)\ngames <- mutate(\n  games,\n  mixedPortionUsers = UsersMixed/Users\n)\n\ngames.overrated <- games[order(games$CriticUserDiff, decreasing = TRUE),]\ngames.underrated <- games[order(games$CriticUserDiff, decreasing = FALSE),]\n\ngames.controversialUsers <- games[\n  games$Users >= 10,\n]\ngames.controversialUsers <- games.controversialUsers[\n  order(\n    games.controversialUsers$posNegDiffUsers,\n    games.controversialUsers$mixedPortionUsers\n  ),\n]\n\ngames.controversialCritics <- games[\n  games$Critics > 1 &\n  games$Users >= 10,\n]\ngames.controversialCritics <- games.controversialCritics[\n  order(\n    games.controversialCritics$posNegDiffCritics,\n    games.controversialCritics$mixedPortionCritics\n  ),\n]\n\n\n## CRITICS DATA ANALYSES\ncritics <- read.csv('CSVs/gamecriticsdata.csv')",
    "created" : 1446586399298.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1861909524",
    "id" : "6A03D0B7",
    "lastKnownWriteTime" : 1446573521,
    "path" : "C:/Users/cpersaud/Desktop/Metacritic-games-analysis/script.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}